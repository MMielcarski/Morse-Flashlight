Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
                              src/morse.o (__divmodhi4)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o (exit)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                              src/main.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                              src/morse.o (__do_clear_bss)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o) (__udivmodhi4)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
LOAD src/main.o
LOAD src/HD44780.o
LOAD src/morse.o
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libatmega32.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xa26
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *(.progmem*)
                0x0000000000000054                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x16 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000060                __do_copy_data
 .init4         0x0000000000000076       0x10 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000086        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
 *(.init9)
 *(.text)
 .text          0x000000000000008e        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
                0x000000000000008e                __vector_1
                0x000000000000008e                __vector_12
                0x000000000000008e                __bad_interrupt
                0x000000000000008e                __vector_6
                0x000000000000008e                __vector_3
                0x000000000000008e                __vector_11
                0x000000000000008e                __vector_13
                0x000000000000008e                __vector_17
                0x000000000000008e                __vector_19
                0x000000000000008e                __vector_7
                0x000000000000008e                __vector_5
                0x000000000000008e                __vector_9
                0x000000000000008e                __vector_2
                0x000000000000008e                __vector_15
                0x000000000000008e                __vector_8
                0x000000000000008e                __vector_14
                0x000000000000008e                __vector_10
                0x000000000000008e                __vector_16
                0x000000000000008e                __vector_18
                0x000000000000008e                __vector_20
 .text          0x0000000000000092        0x0 src/main.o
 .text          0x0000000000000092      0x126 src/HD44780.o
                0x0000000000000092                _LCD_OutNibble
                0x00000000000000bc                _LCD_Write
                0x00000000000000e2                LCD_WriteCommand
                0x00000000000000e8                LCD_WriteData
                0x00000000000000ee                LCD_WriteText
                0x0000000000000106                LCD_GoTo
                0x0000000000000114                LCD_Clear
                0x0000000000000128                LCD_Home
                0x000000000000013c                LCD_Initalize
 .text          0x00000000000001b8      0x698 src/morse.o
                0x00000000000001b8                delay_ms
                0x000000000000022e                LCD_move
                0x0000000000000250                LCD_moveMode
                0x0000000000000274                blinkLed
                0x000000000000028c                broadcast
                0x00000000000003fe                LCD_clearLine
                0x000000000000040e                dial
                0x00000000000005be                messageDecrypt
                0x00000000000006ae                messageDisplay
                0x000000000000075c                isButton
                0x000000000000076e                readEncoder
                0x000000000000077e                initializeSetup
                0x00000000000007be                readEncoderCounter
                0x0000000000000808                __vector_4
 .text          0x0000000000000850        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000850        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000850        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000850        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000850        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
                0x0000000000000850                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000850      0x182 src/main.o
                0x0000000000000850                main
 .text.libgcc.mul
                0x00000000000009d2        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x00000000000009d2       0x28 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
                0x00000000000009d2                __divmodhi4
                0x00000000000009d2                _div
 .text.libgcc   0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000000009fa        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000000000009fa       0x28 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
                0x00000000000009fa                __udivmodhi4
 .text.libgcc   0x0000000000000a22        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000a22        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000a22        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000a22        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000a22        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
                0x0000000000000a22                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000a22        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                0x0000000000000a22                exit
                0x0000000000000a22                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000a22        0x4 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000a26                _etext = .

.data           0x0000000000800060      0x24a load address 0x0000000000000a26
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
 .data          0x0000000000800060        0x0 src/main.o
 .data          0x0000000000800060        0x0 src/HD44780.o
 .data          0x0000000000800060        0x0 src/morse.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800060      0x207 src/morse.o
                0x0000000000800060                morseTable
                0x0000000000800266                waitTime
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800267       0x2d src/main.o
 .rodata.str1.1
                0x0000000000800294       0x15 src/morse.o
 *(.gnu.linkonce.d*)
                0x00000000008002aa                . = ALIGN (0x2)
 *fill*         0x00000000008002a9        0x1 
                0x00000000008002aa                _edata = .
                0x00000000008002aa                PROVIDE (__data_end, .)

.bss            0x00000000008002aa       0xc3
                0x00000000008002aa                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00000000008002aa        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
 .bss           0x00000000008002aa        0x0 src/main.o
 .bss           0x00000000008002aa        0x0 src/HD44780.o
 .bss           0x00000000008002aa       0xc3 src/morse.o
                0x00000000008002aa                encoderTmp
                0x00000000008002ac                btnFlag
                0x00000000008002ae                lcdPos
                0x00000000008002b0                Timer2
                0x00000000008002b2                Timer1
                0x00000000008002b4                encodedMessage
                0x00000000008002d2                morseDecode
                0x000000000080030e                morseInput
                0x000000000080034a                userInput
                0x0000000000800368                asciiNum
                0x000000000080036a                val
                0x000000000080036b                encoderCount
 .bss           0x000000000080036d        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
 .bss           0x000000000080036d        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .bss           0x000000000080036d        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x000000000080036d        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x000000000080036d        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
                0x000000000080036d                PROVIDE (__bss_end, .)
                0x0000000000000a26                __data_load_start = LOADADDR (.data)
                0x0000000000000c70                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080036d        0x0
                0x000000000080036d                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080036d                PROVIDE (__noinit_end, .)
                0x000000000080036d                _end = .
                0x000000000080036d                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 src/main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 src/HD44780.o
 .comment       0x0000000000000011       0x12 src/morse.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 src/main.o
 .debug_aranges
                0x0000000000000020       0x20 src/HD44780.o
 .debug_aranges
                0x0000000000000040       0x20 src/morse.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000     0x133b
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x388 src/main.o
 .debug_info    0x0000000000000388      0x52b src/HD44780.o
 .debug_info    0x00000000000008b3      0xa88 src/morse.o

.debug_abbrev   0x0000000000000000      0x60a
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x114 src/main.o
 .debug_abbrev  0x0000000000000114      0x1a7 src/HD44780.o
 .debug_abbrev  0x00000000000002bb      0x34f src/morse.o

.debug_line     0x0000000000000000      0x385
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x92 src/main.o
 .debug_line    0x0000000000000092      0x110 src/HD44780.o
 .debug_line    0x00000000000001a2      0x1e3 src/morse.o

.debug_frame    0x0000000000000000      0x2dc
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x24 src/main.o
 .debug_frame   0x0000000000000024       0xc0 src/HD44780.o
 .debug_frame   0x00000000000000e4      0x1f8 src/morse.o

.debug_str      0x0000000000000000      0x38e
 *(.debug_str)
 .debug_str     0x0000000000000000      0x1b8 src/main.o
                                        0x1fa (size before relaxing)
 .debug_str     0x00000000000001b8       0xd4 src/HD44780.o
                                        0x23f (size before relaxing)
 .debug_str     0x000000000000028c      0x102 src/morse.o
                                        0x34e (size before relaxing)

.debug_loc      0x0000000000000000      0x9e5
 *(.debug_loc)
 .debug_loc     0x0000000000000000       0xe4 src/main.o
 .debug_loc     0x00000000000000e4      0x1c9 src/HD44780.o
 .debug_loc     0x00000000000002ad      0x738 src/morse.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x40
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x10 src/main.o
 .debug_ranges  0x0000000000000010       0x30 src/morse.o

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
LCD_Clear                                         src/HD44780.o
                                                  src/morse.o
                                                  src/main.o
LCD_GoTo                                          src/HD44780.o
                                                  src/morse.o
                                                  src/main.o
LCD_Home                                          src/HD44780.o
                                                  src/morse.o
                                                  src/main.o
LCD_Initalize                                     src/HD44780.o
                                                  src/morse.o
LCD_WriteCommand                                  src/HD44780.o
                                                  src/morse.o
                                                  src/main.o
LCD_WriteData                                     src/HD44780.o
                                                  src/morse.o
LCD_WriteText                                     src/HD44780.o
                                                  src/morse.o
                                                  src/main.o
LCD_clearLine                                     src/morse.o
LCD_move                                          src/morse.o
LCD_moveMode                                      src/morse.o
                                                  src/main.o
Timer1                                            src/morse.o
Timer2                                            src/morse.o
_LCD_OutNibble                                    src/HD44780.o
_LCD_Write                                        src/HD44780.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__bss_end                                         /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
__divmodhi4                                       /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
                                                  src/morse.o
__do_clear_bss                                    /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                                                  src/morse.o
__do_copy_data                                    /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                                                  src/morse.o
                                                  src/main.o
__heap_end                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__init                                            /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__stack                                           /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__udivmodhi4                                      /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodhi4.o)
                                                  /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
__vector_1                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_10                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_11                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_12                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_13                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_14                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_15                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_16                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_17                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_18                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_19                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_2                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_20                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_3                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_4                                        src/morse.o
                                                  /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_5                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_6                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_7                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_8                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_9                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vector_default                                  /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
__vectors                                         /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
_div                                              /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodhi4.o)
_exit                                             /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
asciiNum                                          src/morse.o
blinkLed                                          src/morse.o
broadcast                                         src/morse.o
btnFlag                                           src/morse.o
delay_ms                                          src/morse.o
                                                  src/main.o
dial                                              src/morse.o
                                                  src/main.o
encodedMessage                                    src/morse.o
encoderCount                                      src/morse.o
                                                  src/main.o
encoderTmp                                        src/morse.o
exit                                              /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
initializeSetup                                   src/morse.o
                                                  src/main.o
isButton                                          src/morse.o
                                                  src/main.o
lcdPos                                            src/morse.o
main                                              src/main.o
                                                  /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32.o
messageDecrypt                                    src/morse.o
                                                  src/main.o
messageDisplay                                    src/morse.o
                                                  src/main.o
morseDecode                                       src/morse.o
morseInput                                        src/morse.o
morseTable                                        src/morse.o
readEncoder                                       src/morse.o
readEncoderCounter                                src/morse.o
                                                  src/main.o
userInput                                         src/morse.o
val                                               src/morse.o
waitTime                                          src/morse.o
